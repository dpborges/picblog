# Define what will be used as base for this image
FROM node:15.10 AS build
# FROM ubuntu:18.04

# set working directory in container
WORKDIR /usr/app

# Set up fontawesome global registry
RUN npm config set "@fortawesome:registry" https://npm.fontawesome.com/
RUN npm config set "//npm.fontawesome.com/:_authToken" 888615F0-6316-4A73-BB5F-38D2B4CD517C

# run npm install; the cache for this step will only be invalidated
# only if package.json changes. This means you can make
# any change to your code in your local cwd, and npm install will not run again.
# npm install will only run if package.json changes.
COPY package.json  ./ 
RUN npm install -g npm@7.20.3

# copy all files from the current local directory to working directory
COPY ./  ./ 

# Tell the image what to do when it starts
CMD ["npm", "run", "dev"]

# START COMMAND which redirects local port 3000 to container port 3000
# docker run -p 3000:3000 <imageid>
# =============================================================================
# Stage 2 - use the build in Stage 1 to build stage 2 nginx webserver port 80
# =============================================================================
# FROM nginx:stable-alpine
# # Copy all files and folders from your project build directory
# COPY --from=build /usr/app/public /usr/share/nginx/html
# # ----- If using react router, overwrite default nginx config ------
# RUN  rm /etc/nginx/conf.d/default.conf
# COPY --from=build /usr/app/nginx/nginx.conf /etc/nginx/conf.d
# # ------ end of of react router change -----------------------------
# # Expose port to outside world
# EXPOSE 80
# # start nginx; requires -g "daemon off" flag to keep it running and does not exit
# CMD ["nginx", "-g", "daemon off;"]